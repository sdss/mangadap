[metadata]
name = sdss-mangadap
description = MaNGA Data Analysis Pipeline
long_description = file: README.md
long_description_content_type = text/markdown
author = SDSS-IV/MaNGA Data Team
author_email = westfall@ucolick.org
license = BSD-3
url = https://github.com/sdss/mangadap
edit_on_github = False
github_project = sdss/mangadap
keywords = sdss, manga, astronomy, spectroscopy, galaxy, galaxies, data analysis
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Documentation :: Sphinx
    Topic :: Scientific/Engineering :: Astronomy
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Software Development :: User Interfaces

[options]
zip_safe = False
use_2to3 = False
packages = find:
python_requires = >=3.10,<3.13
setup_requires = setuptools_scm
include_package_data = True
install_requires =
    requests>=2.25
    ipython>=7.20
    configobj>=5.0.6
    tomli>=2.0
    numpy<2.0
    scipy>=1.8
    matplotlib>=3.5
    astropy>=5.0
    pydl>=0.7.0
    ppxf==8.1.0
    cvxopt>=1.3
    vorbin==3.1.5

[options.extras_require]
test =
    pytest>=7.1.0
    pytest-astropy
    tox
    pytest-cov
    coverage
    codecov
docs =
    sphinx
    sphinx-automodapi
    sphinx_rtd_theme
dev =
    pytest>=7.1.0
    pytest-astropy
    tox
    pytest-cov
    coverage
    codecov
    sphinx
    sphinx-automodapi
    sphinx_rtd_theme

[options.package_data]
* = *.rst, *.txt, data/*, data/*/*, data/*/*/*, data/*/*/*/*, data/*/*/*/*/*, data/*/*/*/*/*/*

[options.entry_points]
console_scripts =
    construct_dapall = mangadap.scripts.construct_dapall:ConstructDapAll.entry_point
    dap_calculate_covariance  = mangadap.scripts.calculate_covariance:CalculateCovariance.entry_point
    dap_find_repeat_observations = mangadap.scripts.find_repeat_observations:FindRepeatObservations.entry_point
    dap_fit_residuals = mangadap.scripts.fit_residuals:FitResiduals.entry_point
    dap_plate_fit_qa = mangadap.scripts.plate_fit_qa:PlateFitQA.entry_point
    dap_ppxffit_qa = mangadap.scripts.ppxffit_qa:PpxfFitQA.entry_point
    dap_status = mangadap.scripts.dap_status:DapStatus.entry_point
    dap_template_flux_norm = mangadap.scripts.template_flux_norm:TemplateFluxNorm.entry_point
    dapall_qa = mangadap.scripts.dapall_qa:DapAllQA.entry_point
    manga_dap = mangadap.scripts.manga_dap:MangaDap.entry_point
    manga_dap_inspector = mangadap.scripts.manga_dap_inspector:MangaDapInspector.entry_point
    manga_synth_datacube = mangadap.scripts.manga_synth_datacube:MangaSynthDatacube.entry_point
    rundap = mangadap.scripts.rundap:RunDap.entry_point
    spotcheck_dap_maps = mangadap.scripts.spotcheck_dap_maps:SpotcheckDapMaps.entry_point
    write_dap_config = mangadap.scripts.write_dap_config:WriteDapConfig.entry_point

[tool:pytest]
testpaths = "mangadap/tests"

[coverage:run]
omit =
    mangadap/_astropy_init*
    mangadap/conftest.py
    mangadap/*setup_package*
    mangadap/tests/*
    mangadap/*/tests/*
    mangadap/extern/*
    mangadap/version*
    */mangadap/_astropy_init*
    */mangadap/conftest.py
    */mangadap/*setup_package*
    */mangadap/tests/*
    */mangadap/*/tests/*
    */mangadap/extern/*
    */mangadap/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_


