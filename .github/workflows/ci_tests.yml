# Adapted from pypeit/.github/workflows/ci_tests.yml

name: CI Tests

on:
  push:
    branches:
    - main
    - develop
  pull_request:

env:
  SETUP_XVFB: True  # avoid issues if mpl tries to open a GUI window

jobs:
  ci-tests:
    name: Tox env ${{ matrix.python }}-${{ matrix.toxenv }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: ['3.10', '3.11', '3.12']
        toxenv: [test-cov, test-astropydev]
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip tox
    - name: Test with tox
      run: |
        tox -e ${{ matrix.python }}-${{ matrix.toxenv }}
#    - name: Upload coverage to codecov
#      if: "contains(matrix.toxenv, '-cov')"
#      uses: codecov/codecov-action@v3
#      with:
#        token: ${{ secrets.CODECOV }}
#        file: ./coverage.xml
#        fail_ci_if_error: true

  os-tests:
    name: Python ${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      # set this to false for now so windows failures don't prevent macos test from finishing
      fail-fast: false
      matrix:
        os: [macos-latest]
        python: ['3.10', '3.11', '3.12']
        toxenv: [test]
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip tox
    - name: Test with tox
      run: |
        tox -e ${{ matrix.python }}-${{ matrix.toxenv }}

  conda:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Conda environment check
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip tox
    - name: Run dap tests from environment built with conda
      run: |
        tox -e conda

  codestyle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Python codestyle check
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pycodestyle
    - name: Check for runtime errors using pycodestyle
      run: |
        pycodestyle mangadap --count --select=E9



